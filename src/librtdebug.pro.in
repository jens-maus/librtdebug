#/* vim:set ts=2 nowrap: ****************************************************
#
# librtdebug - A C++ based thread-safe Runtime Debugging Library
# Copyright (C) 2003-2005 by Jens Langner <Jens.Langner@light-speed.de>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# $Id$
#
#***************************************************************************/

# main variables
TEMPLATE  = lib
CONFIG	 *= warn_on @ANSI_COLOR@ @QTLINK_LEVEL@
QT				=
TARGET    = rtdebug
VERSION   = 1.0
DESTDIR   = ../lib/

# directory specification
OBJECTS_DIR = .obj
MOC_DIR     = .moc
UI_DIR      = .ui

# define headers and source files for compilation
# PUB_HEADER: public headers going into /usr/local/include/rtdebug
# HEADERS...: all headers including private ones
# SOURCES...: all source files required for the compilation

PUB_HEADER =	CRTDebug.h \
							includes/rtdebug.h

HEADERS  = $$PUB_HEADER

SOURCES  = CRTDebug.cpp

DEPENDPATH   = 
INCLUDEPATH  = . includes

# UNIX based target platforms installation defines
unix {
  # on unix we use configure to define everything like install path
	PREFIX=@prefix@
  LIB_DIR=@prefix@/lib
  INCLUDE_DIR=@prefix@/include
  DATA_DIR=@prefix@/share
	
  # -p option should be -P, so that "make install" as root creates files owned by root
  # and links are preserved.
  QMAKE_COPY_FILE = $(COPY) -P
	
  # install header 
  include.path  = $$INCLUDE_DIR/rtdebug
  include.files = $$PUB_HEADER

  # install documentation html
  documentation.path = $$DATA_DIR/rtdebug/doc
  documentation.files = ../doc/*.html ../doc/*.css

  # install library
  target.path = $$LIB_DIR

  # "make install" configuration options
  INSTALLS += target include documentation
}

# own QMAKE Flags definitions
QMAKE_CXXFLAGS_RELEASE	= @CXXFLAGS@
QMAKE_CXXFLAGS_DEBUG		= @CXXFLAGS@

# the librtdebug library itself doesn't require Qt so we remove the QT
# libs from our linker dependency
QMAKE_LIBS_QT =
QMAKE_LIBS_QT_THREAD =

# find out the GCC version
# and define some gcc v3+ options only.
GCC_VERSION = @GCC_VERSION@
contains(GCC_VERSION, 3) {
	QMAKE_CXXFLAGS *= -fmessage-length=0
}

# find out the system
HOST_OS=@HOST_OS@
HOST_CPU=@HOST_CPU@
contains(HOST_CPU, sparc) {
	QMAKE_CXXFLAGS *= -mcpu=v9 -mtune=ultrasparc3
}
else {
	contains(HOST_CPU, [pP]ower[pP]c) {
      QMAKE_CXXFLAGS *= -Acpu=powerpc -mcpu=G4
  }
  else {
		contains(HOST_CPU, [oO]pteron.+) {			
			QMAKE_CXXFLAGS *= -Acpu=amd64 -march=opteron
		}
	}
}

# set the config to either release or debug
COMPILE_LEVEL = @COMPILE_LEVEL@
contains(COMPILE_LEVEL, debug) {
	CONFIG -= release
	CONFIG += debug
	QMAKE_CXXFLAGS_DEBUG *= -g -O0
	DEFINES *= DEBUG
}
else {
	CONFIG -= debug
	CONFIG += release
	QMAKE_CXXFLAGS_RELEASE *= -O3 -funroll-loops
	QMAKE_LINK *= -s 
	DEFINES -= DEBUG
}

# use ANSI colors if it was specified on configure time
ansi_color {
	QMAKE_CXX		= @printf '\033[32mCompiling $<\033[0m\n';$$QMAKE_CXX
	QMAKE_LINK	= @printf '\033[32mLinking \033[1m$@\033[0m\n';$$QMAKE_LINK
	DEFINES += ANSI_COLOR
}

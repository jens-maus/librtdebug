#/* vim:set ts=2 nowrap: ****************************************************
#
# librtdebug - A C++ based thread-safe Runtime Debugging Library
# Copyright (C) 2003-2005 by Jens Langner <Jens.Langner@light-speed.de>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# $Id$
#
#***************************************************************************/
@SET_MAKE@

srcdir = @srcdir@
top_builddir = .

MKDIR			= @MKDIR_PATH@ -p
COPY			= @CP_PATH@ -a
COPY_DIR	= @CP_PATH@ -ar 
MOVE			= @MV_PATH@ -f
TAR				= @TAR_PATH@ -cf
GZIP			= @GZIP_PATH@
RM				= @RM_PATH@ -f
RMDIR			= @RM_PATH@ -rf
QMAKE			= @QMAKE_PATH@

PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME			= @PACKAGE_NAME@
PACKAGE_STRING		= @PACKAGE_STRING@
PACKAGE_TARNAME		= @PACKAGE_TARNAME@
PACKAGE_VERSION		= @PACKAGE_VERSION@
PATH_SEPARATOR		= @PATH_SEPARATOR@

USERDOCU = @USERDOCU@

bindir = @bindir@
prefix = @prefix@

SUBDIRS = m4 src

RECURSIVE_TARGETS = all-recursive dist-recursive clean-recursive distclean-recursive install-recursive

# Which extra files are to distribution
DIST_COMMON = AUTHORS COPYING ChangeLog README TODO \
							Makefile.in configure \
							m4/Makefile.in m4/aclocal.m4 m4/acinclude.m4 m4/configure.in \
							src/includes/config.h.in src/librtdebug.pro.in

DIST_DOC = doc

# Which extra files are to clean
CONFIG_DISTCLEAN_FILES = config.status config.cache config.log configure.lineno \
												 Makefile src/librtdebug.pro src/includes/config.h src/Makefile

all: qmakefiles all-recursive

qmakefiles: src/Makefile

src/Makefile: src/librtdebug.pro
	@echo "generating '$@' by executing qmake... "
	@(cd src; $(QMAKE))

# Make a distribution file for normal users
dist:
	@echo "Making distribution file $(PACKAGE_TARNAME).tar.gz ..." && \
	$(MKDIR) .dist/$(PACKAGE_TARNAME); \
	list='$(SOURCES) $(HEADERS) $(TRANSLATIONS)'; for subfile in $$list; do \
		$(COPY) --parents "src/$$subfile" .dist/$(PACKAGE_TARNAME); \
	done; 
	@$(COPY) --parents $(DIST_COMMON) .dist/$(PACKAGE_TARNAME) && \
	$(COPY_DIR) --parents $(DIST_DOC) .dist/$(PACKAGE_TARNAME) && \
	( cd `dirname .dist/$(PACKAGE_TARNAME)` && \
	$(TAR) $(PACKAGE_TARNAME).tar $(PACKAGE_TARNAME) && \
	$(GZIP) $(PACKAGE_TARNAME).tar ) && \
	$(MOVE) `dirname .dist/$(PACKAGE_TARNAME)`/$(PACKAGE_TARNAME).tar.gz . && \
	$(RMDIR) .dist/$(PACKAGE_TARNAME)

install: install-recursive

clean: clean-recursive

distclean: distclean-recursive
	(cd $(top_builddir)/doc/developer && $(MAKE) distclean); \
	$(RMDIR) ./src/.obj; \
	$(RMDIR) ./src/.moc; \
  $(RMDIR) ./src/.ui; \
	$(RMDIR) .dist; \
	$(RM) $(CONFIG_DISTCLEAN_FILES);

# Check on configure in top dir
$(top_builddir)/configure: $(top_builddir)/m4/configure.in $(top_builddir)/m4/acinclude.m4
	$(RM) configure* && cd $(top_builddir)/m4 && $(MAKE)

# Check on configure in top dir
$(top_builddir)/config.status: $(top_builddir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	./config.status --recheck

# Check on makefile.in in current dir
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && ./config.status 

# Check on config.h.in in src dir
src/includes/config.h: $(srcdir)/src/includes/config.h.in $(top_builddir)/config.status
	cd $(top_builddir) && ./config.status

# Check on librtdebug.pro.in in src dir
src/librtdebug.pro: $(srcdir)/src/librtdebug.pro.in src/includes/config.h.in $(top_builddir)/config.status 
	cd $(top_builddir) && ./config.status

# Developer documentation
# Check on makefile.in in current dir
$(top_builddir)/doc/developer/Makefile:  $(top_builddir)/doc/developer/Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) && ./config.status 

devdoc:
	(cd doc/developer && $(MAKE) devdoc)

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS): src/librtdebug.pro  
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
		dot_seen=yes; \
		local_target="$$target-am"; \
	  else \
		local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done;
#if test "$$dot_seen" = "no"; then \
#$(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
#fi; test -z "$$fail"
